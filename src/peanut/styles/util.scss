@charset "utf-8";

.mark-title {
    font-size: 14px;
    font-weight: 500;
    color: rgba(0, 0, 0, 0.85);
    display: flex;
    align-items: center;

    &::before {
        content: "";
        display: inline-block;
        width: 4px;
        height: 14px;
        background: #0087FF;
        margin-right: 12px;
    }
}

.p-flex {
    display: flex !important;
}
.flex-1 {
    flex: 1;
}

.flex-row {
    display: flex;
    flex-direction: row !important;
}

.flex-row-reverse {
    display: flex;
    flex-direction: row-reverse !important;
}

.flex-column {
    display: flex;
    flex-direction: column !important;
}

.flex-column-reverse {
    display: flex;
    flex-direction: column-reverse !important;
}

.justify-content-start {
    justify-content: flex-start !important;
}

.justify-content-end {
    justify-content: flex-end !important;
}

.justify-content-center {
    justify-content: center !important;
}

.justify-content-between {
    justify-content: space-between !important;
}

.justify-content-around {
    justify-content: space-around !important;
}

.align-items-start {
    align-items: flex-start !important;
}

.align-items-end {
    align-items: flex-end !important;
}

.align-items-center {
    align-items: center !important;
}

.align-items-stretch {
    align-items: stretch !important;
}

.align-items-baseline {
    align-items: baseline !important;
}

.align-content-start {
    align-content: flex-start !important;
}

.align-content-end {
    align-content: flex-end !important;
}

.align-content-center {
    align-content: center !important;
}

.align-content-stretch {
    align-content: stretch !important;
}

.align-content-between {
    align-content: space-between !important;
}

.align-content-around {
    align-content: space-around !important;
}

.align-self-start {
    align-self: flex-start !important;
}

.align-self-end {
    align-self: flex-end !important;
}

.align-self-center {
    align-self: center !important;
}

.align-self-stretch {
    align-self: stretch !important;
}

.align-self-baseline {
    align-self: baseline !important;
}
.text-light {
    font-weight: 300 !important;
}

.text-normal {
    font-weight: 400 !important;
}

.text-bold {
    font-weight: 600 !important;
}

.text-bolder {
    font-weight: 700 !important;
}
.font-light {
    font-size: 14px !important;
}

.font-normal {
    font-size: 16px !important;
}

.font-bold {
    font-size: 18px !important;
}

.font-bolder {
    font-size: 20px !important;
}

$util-list: (
                ("m", auto, ""),
                ("m", 0, ""),
                ("m", 4, "px"),
                ("m", 8, "px"),
                ("m", 12, "px"),
                ("m", 16, "px"),
                ("m", 24, "px"),
                ("m", 32, "px"),
                ("p", 0, ""),
                ("p", 4, "px"),
                ("p", 8, "px"),
                ("p", 12, "px"),
                ("p", 16, "px"),
                ("p", 24, "px"),
                ("p", 32, "px")
);

$position-list: ("", "t", "r", "b", "l", "x", "y");

@mixin build($way, $position, $value, $unit) {
    @if $position == "t" {
        #{$way}-top: #{$value}#{$unit} !important;
    } @else if $position == "r" {
        #{$way}-right: #{$value}#{$unit} !important;
    } @else if $position == "b" {
        #{$way}-bottom: #{$value}#{$unit} !important;
    } @else if $position == "l" {
        #{$way}-left: #{$value}#{$unit} !important;
    } @else if $position == "x" {
        #{$way}-left: #{$value}#{$unit} !important;
        #{$way}-right: #{$value}#{$unit} !important;
    } @else if $position == "y" {
        #{$way}-top: #{$value}#{$unit} !important;
        #{$way}-bottom: #{$value}#{$unit} !important;
    } @else {
        #{$way}: #{$value}#{$unit} !important;
    }
}

@each $item in $util-list {
    $format: nth($item, 1);
    $value: nth($item, 2);
    $unit: nth($item, 3);

    @each $position in $position-list {
        .#{$format}#{$position}-#{$value} {
            @if $format == "m" {
                @include build("margin", $position, $value, $unit);
            } @else if $format == "p" {
                @include build("padding", $position, $value, $unit);
            }
        }
    }
}

